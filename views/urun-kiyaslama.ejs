<%- include('partials/header') %>
<%- include('partials/sidebar') %>

<style>
    @media print {
        @page {
            size: A4 portrait; /* Dikey Sayfa */
        }
    }
</style>

<main class="main-content">
    <h1>
        <i class="fa-solid fa-chart-simple"></i> <%= sayfaBasligi %>
        <button onclick="window.print()" class="print-button">
            <i class="fa-solid fa-file-pdf"></i> PDF Olarak Kaydet
        </button>
    </h1>

    <div class="print-summary">
        <h4>Filtre Özeti</h4>
        <% if (filtreler.metrik) { %><p><strong>Analiz Metriği:</strong> <%= filtreler.metrik.charAt(0).toUpperCase() + filtreler.metrik.slice(1) %></p><% } %>
        <% if (filtreler.fis_turu) { %><p><strong>Satış Tipi:</strong> <%= filtreler.fis_turu === 'toptan' ? 'Toptan Satış' : 'Market Satış' %></p><% } %>
        <% if (filtreler.tedarikci) { %><p><strong>Tedarikçi:</strong> <%= filtreler.tedarikci %></p><% } %>
        <% if (filtreler.temsilci) { %><p><strong>Temsilci:</strong> <%= filtreler.temsilci %></p><% } %>
        <% if (filtreler.urun_grubu) { %><p><strong>Ürün Grubu:</strong> <%= filtreler.urun_grubu %></p><% } %>
        <% if (filtreler.urun) { %><p><strong>Ürün:</strong> <%= filtreler.urun %></p><% } %>
    </div>

    <form action="/urun-kiyaslama" method="GET" class="filter-form">
        <div class="form-group">
            <label for="metrik">Analiz Metriği</label>
            <select name="metrik" id="metrik">
                <option value="adet" <%= (filtreler.metrik === 'adet') ? 'selected' : '' %>>Adet</option>
                <option value="litre" <%= (filtreler.metrik === 'litre') ? 'selected' : '' %>>Litre</option>
                <option value="tutar" <%= (filtreler.metrik === 'tutar') ? 'selected' : '' %>>Tutar</option>
            </select>
        </div>
        <div class="form-group">
            <label for="fis_turu">Satış Tipi</label>
            <select name="fis_turu" id="fis_turu">
                <option value="">Tümü</option>
                <option value="toptan" <%= (filtreler.fis_turu === 'toptan') ? 'selected' : '' %>>Toptan Satış</option>
                <option value="market" <%= (filtreler.fis_turu === 'market') ? 'selected' : '' %>>Market Satış</option>
            </select>
        </div>
        <div class="form-group">
            <label for="tedarikci">Tedarikçi</label>
            <select name="tedarikci" id="tedarikci">
                <option value="">Tümü</option>
                <% if (tedarikciler) { tedarikciler.forEach(t => { %>
                    <option value="<%= t.TEDARIKCI %>" <%= (filtreler.tedarikci === t.TEDARIKCI) ? 'selected' : '' %>><%= t.TEDARIKCI %></option>
                <% }) } %>
            </select>
        </div>
        <div class="form-group">
            <label for="temsilci">Satış Temsilcisi</label>
            <select name="temsilci" id="temsilci">
                <option value="">Tümü</option>
                <% if (temsilciler) { temsilciler.forEach(t => { %>
                    <option value="<%= t.SATISTEMSILCI %>" <%= (filtreler.temsilci === t.SATISTEMSILCI) ? 'selected' : '' %>><%= t.SATISTEMSILCI %></option>
                <% }) } %>
            </select>
        </div>
        <div class="form-group" style="flex-grow: 1.5;">
            <label for="urun_grubu">Ürün Grubu</label>
            <select name="urun_grubu" id="urun_grubu">
                <option value="">Tümü</option>
                <% if (urunGruplari) { urunGruplari.forEach(ug => { %>
                    <option value="<%= ug.URUN_GRUBU %>" <%= (filtreler.urun_grubu === ug.URUN_GRUBU) ? 'selected' : '' %>><%= ug.URUN_GRUBU %></option>
                <% }) } %>
            </select>
        </div>
        <div class="form-group" style="flex-grow: 1.5;">
            <label for="urun">Ürün</label>
            <select name="urun" id="urun">
                <option value="">Tümü</option>
                 <% if (urunler) { urunler.forEach(u => { %>
                    <option value="<%= u.STOK_ADI %>" <%= (filtreler.urun === u.STOK_ADI) ? 'selected' : '' %>><%= u.STOK_ADI %></option>
                <% }) } %>
            </select>
        </div>
        
        <div class="form-actions">
            <button type="submit">Karşılaştır</button>
            <a href="/urun-kiyaslama" class="reset-button">Sıfırla</a>
        </div>
    </form>

    <% if ((filtreler.urun_grubu || filtreler.urun) && sonuclar.length > 0) { %>
        <% 
            let birimText = 'Adet';
            if (filtreler.metrik === 'litre') birimText = 'Litre';
            if (filtreler.metrik === 'tutar') birimText = 'TL';

            const formatNumber = (num) => {
                if (filtreler.metrik === 'tutar') {
                    return num.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                }
                const birimSuffix = filtreler.metrik === 'litre' ? ' L' : '';
                return num.toLocaleString('tr-TR', { maximumFractionDigits: 2 }) + birimSuffix;
            };

            const toplam2024 = sonuclar.reduce((sum, s) => sum + s.miktar2024, 0);
            const toplam2025 = sonuclar.reduce((sum, s) => sum + s.miktar2025, 0);
            const toplamDegisim = toplam2025 - toplam2024;
            let yuzdeDegisim = 0;
            if (toplam2024 > 0) {
                yuzdeDegisim = ((toplam2025 - toplam2024) / toplam2024) * 100;
            } else if (toplam2025 > 0) {
                yuzdeDegisim = 100;
            }
        %>
        
        <div class="kpi-container" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
            <div class="kpi-card"><div class="info"><h3>2024 Toplam Satış (<%= birimText %>)</h3><div class="value"><%= formatNumber(toplam2024) %></div></div></div>
            <div class="kpi-card"><div class="info"><h3>2025 Toplam Satış (<%= birimText %>)</h3><div class="value"><%= formatNumber(toplam2025) %></div></div></div>
            <div class="kpi-card"><div class="info"><h3>Yıllık Değişim</h3><div class="value <%= toplamDegisim >= 0 ? 'karlilik-pozitif' : 'karlilik-negatif' %>"><% if(toplamDegisim > 0) { %>+<% } %><%= formatNumber(toplamDegisim) %></div></div></div>
            <div class="kpi-card"><div class="info"><h3>Büyüme Oranı</h3><div class="value <%= yuzdeDegisim >= 0 ? 'karlilik-pozitif' : 'karlilik-negatif' %>"><% if(yuzdeDegisim > 0) { %>+<% } %><%= yuzdeDegisim.toFixed(2) %>%</div></div></div>
        </div>
        
        <div class="result-container" style="display: grid; grid-template-columns: 1fr; gap: 2rem;">
            <div class="result-panel">
                <h2>Aylık Satış Karşılaştırması - <%= filtreler.urun || filtreler.urun_grubu %> (<%= birimText %>)</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Ay</th>
                            <th>2024 Satış</th>
                            <th>2025 Satış</th>
                            <th>Değişim</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% sonuclar.forEach(s => { 
                            const degisim = s.miktar2025 - s.miktar2024;
                            let degisimClass = '';
                            if (degisim > 0) degisimClass = 'karlilik-pozitif';
                            if (degisim < 0) degisimClass = 'karlilik-negatif';
                        %>
                        <tr>
                            <td><%= s.ay %></td>
                            <td class="sayisal"><%= formatNumber(s.miktar2024) %></td>
                            <td class="sayisal"><%= formatNumber(s.miktar2025) %></td>
                            <td class="sayisal <%= degisimClass %>"><% if (degisim > 0) { %>+<% } %><%= formatNumber(degisim) %></td>
                        </tr>
                        <% }) %>
                    </tbody>
                    <tfoot>
                        <tr style="font-weight: bold;">
                            <td>TOPLAM</td>
                            <td class="sayisal"><%= formatNumber(toplam2024) %></td>
                            <td class="sayisal"><%= formatNumber(toplam2025) %></td>
                            <td class="sayisal <%= toplamDegisim >= 0 ? 'karlilik-pozitif' : 'karlilik-negatif' %>"><% if (toplamDegisim > 0) { %>+<% } %><%= formatNumber(toplamDegisim) %></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="chart-container" style="background-color: #fff; padding: 2rem; border-radius: 8px;">
                 <h2>Grafiksel Karşılaştırma</h2>
                <canvas id="comparisonChart"></canvas>
            </div>
        </div>
    <% } else { %>
        <div class="info-box" style="background: #fff; padding: 2rem; border-radius: 8px; text-align: center;">
            <p>Lütfen analiz için en az bir ürün grubu veya ürün seçin.</p>
        </div>
    <% } %>
</main>

<% if ((filtreler.urun_grubu || filtreler.urun) && sonuclar.length > 0) { %>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const ctx = document.getElementById('comparisonChart').getContext('2d');
        const sonuclar = <%- JSON.stringify(sonuclar) %>;
        const birim = '<%= filtreler.metrik === "litre" ? "Litre" : (filtreler.metrik === "tutar" ? "TL" : "Adet") %>';
        const baslik = '<%= filtreler.urun || filtreler.urun_grubu %>';

        const labels = sonuclar.map(d => d.ay);
        const data2024 = sonuclar.map(d => d.miktar2024);
        const data2025 = sonuclar.map(d => d.miktar2025);

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: `2024 Satış (${birim})`,
                        data: data2024,
                        backgroundColor: 'rgba(149, 165, 166, 0.8)', 
                    },
                    {
                        label: `2025 Satış (${birim})`,
                        data: data2025,
                        backgroundColor: 'rgba(52, 152, 219, 0.8)',
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: `${baslik} - Yıllık Satış Karşılaştırması` }
                },
                scales: {
                    y: { 
                        beginAtZero: true,
                        title: { display: true, text: `Toplam Satış (${birim})` }
                    }
                }
            }
        });
    });
</script>
<% } %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tedarikciSelect = document.getElementById('tedarikci');
        const temsilciSelect = document.getElementById('temsilci');
        const urunGrubuSelect = document.getElementById('urun_grubu');
        const urunSelect = document.getElementById('urun');

        const seciliUrunGrubu = urunGrubuSelect.value;
        const seciliUrun = urunSelect.value;

        async function guncelleUrunler() {
            const tedarikci = tedarikciSelect.value;
            const temsilci = temsilciSelect.value;
            const urunGrubu = urunGrubuSelect.value;

            urunSelect.disabled = true;
            urunSelect.innerHTML = '<option value="">Yükleniyor...</option>';

            try {
                const response = await fetch(`/api/urunler?tedarikci=${encodeURIComponent(tedarikci)}&temsilci=${encodeURIComponent(temsilci)}&urun_grubu=${encodeURIComponent(urunGrubu)}`);
                if (!response.ok) throw new Error('Sunucu hatası');
                
                const urunler = await response.json();
                urunSelect.innerHTML = '<option value="">Tümü</option>';
                
                let seciliUrunHalaListede = false;
                urunler.forEach(u => {
                    const option = document.createElement('option');
                    option.value = u.STOK_ADI;
                    option.textContent = u.STOK_ADI;
                    if (u.STOK_ADI === seciliUrun) {
                        option.selected = true;
                        seciliUrunHalaListede = true;
                    }
                    urunSelect.appendChild(option);
                });
                 if (!seciliUrunHalaListede) {
                    urunSelect.value = "";
                }
            } catch (error) {
                console.error('Ürünler güncellenirken hata oluştu:', error);
                urunSelect.innerHTML = '<option value="">Ürünler yüklenemedi!</option>';
            } finally {
                urunSelect.disabled = false;
            }
        }

        async function guncelleUrunGruplari() {
            const tedarikci = tedarikciSelect.value;
            const temsilci = temsilciSelect.value;
            
            urunGrubuSelect.disabled = true;
            urunGrubuSelect.innerHTML = '<option value="">Yükleniyor...</option>';
            
            try {
                const response = await fetch(`/api/urun-gruplari?tedarikci=${encodeURIComponent(tedarikci)}&temsilci=${encodeURIComponent(temsilci)}`);
                if (!response.ok) throw new Error('Sunucu hatası');

                const urunGruplari = await response.json();
                urunGrubuSelect.innerHTML = '<option value="">Tümü</option>';
                
                let seciliGrupHalaListede = false;
                urunGruplari.forEach(ug => {
                    const option = document.createElement('option');
                    option.value = ug.URUN_GRUBU;
                    option.textContent = ug.URUN_GRUBU;
                    if (ug.URUN_GRUBU === seciliUrunGrubu) {
                        option.selected = true;
                        seciliGrupHalaListede = true;
                    }
                    urunGrubuSelect.appendChild(option);
                });
                if (!seciliGrupHalaListede) {
                    urunGrubuSelect.value = "";
                }
            } catch (error) {
                console.error('Ürün grupları güncellenirken hata oluştu:', error);
                urunGrubuSelect.innerHTML = '<option value="">Gruplar yüklenemedi!</option>';
            } finally {
                urunGrubuSelect.disabled = false;
                await guncelleUrunler();
            }
        }

        tedarikciSelect.addEventListener('change', guncelleUrunGruplari);
        temsilciSelect.addEventListener('change', guncelleUrunGruplari);
        urunGrubuSelect.addEventListener('change', guncelleUrunler);
    });
</script>

<%- include('partials/footer') %>